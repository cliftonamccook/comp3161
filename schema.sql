-- Run log when file execute
-- tee schema.log

DROP DATABASE booksystem;
CREATE DATABASE booksystem;

USE booksystem;

DROP TABLE IF EXISTS Book;
CREATE TABLE Book(
    ISBN INTEGER(13) NOT NULL,
    bookTitle VARCHAR(255),
    pages INTEGER(10),
    edition VARCHAR(10),
    PRIMARY KEY(ISBN)
);

DROP TABLE IF EXISTS Author;
CREATE TABLE Author(
    authorId INTEGER(12) NOT NULL,
    authorFname VARCHAR(255),
    authorLname VARCHAR(255),
    PRIMARY KEY(authorId)
);

DROP TABLE IF EXISTS Library;
CREATE TABLE Library(
    libraryId INTEGER(12) NOT NULL,
    libraryName VARCHAR(255),
    city VARCHAR(255),
    PRIMARY KEY(libraryId)
);

DROP TABLE IF EXISTS Member;
CREATE TABLE Member(
    memberId INTEGER(12) NOT NULL,
    memberFname VARCHAR(255),
    memberLname VARCHAR(255),
    email VARCHAR(255),
    PRIMARY KEY(memberId)
);

DROP TABLE IF EXISTS Publisher;
CREATE TABLE Publisher(
    publisherId INTEGER(12) NOT NULL,
    publisherName VARCHAR(255),
    city VARCHAR(255),
    country VARCHAR(255),
    PRIMARY KEY(publisherId)
);

DROP TABLE IF EXISTS Member_Phone;
CREATE TABLE Member_Phone(
    memberId INTEGER(12) NOT NULL,
    phone VARCHAR(10),
    FOREIGN KEY (memberId) REFERENCES Member(memberId) ON UPDATE CASCADE ON DELETE CASCADE,
    PRIMARY KEY(memberId,phone)
);

DROP TABLE IF EXISTS Writes;
CREATE TABLE Writes(
    ISBN INTEGER(13) NOT NULL,
    authorId INTEGER(12),
    FOREIGN KEY (ISBN) REFERENCES Book(ISBN) ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY (authorId) REFERENCES Author(authorId) ON UPDATE CASCADE ON DELETE CASCADE,
    PRIMARY KEY(ISBN,authorId)
);

DROP TABLE IF EXISTS Fiction;
CREATE TABLE Fiction
(
  ISBN INTEGER(13) NOT NULL,
  PRIMARY KEY (ISBN),
  FOREIGN KEY (ISBN) REFERENCES Book(ISBN) ON UPDATE CASCADE ON DELETE CASCADE
);

DROP TABLE IF EXISTS NonFiction;
CREATE TABLE NonFiction
(
  ISBN INTEGER(13) NOT NULL,
  PRIMARY KEY (ISBN),
  FOREIGN KEY (ISBN) REFERENCES Book(ISBN) ON UPDATE CASCADE ON DELETE CASCADE
);

DROP TABLE IF EXISTS Fiction_fictionGenre;
CREATE TABLE Fiction_fictionGenre
(
  fictionGenre VARCHAR(255) NOT NULL,
  ISBN INTEGER(13) NOT NULL,
  PRIMARY KEY (fictionGenre, ISBN),
  FOREIGN KEY (ISBN) REFERENCES Fiction(ISBN) ON UPDATE CASCADE ON DELETE CASCADE
);

DROP TABLE IF EXISTS NonFiction_nonFictionGenre;
CREATE TABLE NonFiction_nonFictionGenre
(
  nonFictionGenre VARCHAR(255) NOT NULL,
  ISBN INTEGER(13) NOT NULL,
  PRIMARY KEY (nonFictionGenre, ISBN),
  FOREIGN KEY (ISBN) REFERENCES NonFiction(ISBN) ON UPDATE CASCADE ON DELETE CASCADE
);

DROP TABLE IF EXISTS Fine;
CREATE TABLE Fine(
    memberId INTEGER(12) NOT NULL,
    fineNumber INTEGER(10) NOT NULL,
    fineDate DATE,
    amount DECIMAL(10,2),
    breach VARCHAR(255),
    FOREIGN KEY (memberId) REFERENCES Member(memberId) ON UPDATE CASCADE ON DELETE CASCADE,
    PRIMARY KEY(fineNumber)
);

DROP TABLE IF EXISTS Subscribes;
CREATE TABLE Subscribes(
    memberId INTEGER(12) NOT NULL,
    libraryId INTEGER(12) NOT NULL,
    joinDate DATE,
    expireDate DATE,
    FOREIGN KEY (memberId) REFERENCES Member(memberId) ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY (libraryId) REFERENCES Library(libraryId) ON UPDATE CASCADE ON DELETE CASCADE,
    PRIMARY KEY(memberId,libraryId)
);

DROP TABLE IF EXISTS Owns;
CREATE TABLE Owns(
    libraryId INTEGER(12) NOT NULL,
    ISBN INTEGER(13) NOT NULL,
    dateAcquired DATE,
    copies INTEGER(10),
    FOREIGN KEY (ISBN) REFERENCES Book(ISBN) ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY (libraryId) REFERENCES Library(libraryId) ON UPDATE CASCADE ON DELETE CASCADE,
    PRIMARY KEY(libraryId,ISBN)
);

DROP TABLE IF EXISTS Publishes;
CREATE TABLE Publishes(
    publisherId INTEGER(12) NOT NULL,
    ISBN INTEGER(13) NOT NULL,
    publicationDate DATE,
    FOREIGN KEY (ISBN) REFERENCES Book(ISBN) ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY (publisherId) REFERENCES Publisher(publisherId) ON UPDATE CASCADE ON DELETE CASCADE,
    PRIMARY KEY(publisherId,ISBN)
);

DROP TABLE IF EXISTS Borrows;
CREATE TABLE Borrows(
    memberId INTEGER(12) NOT NULL,
    ISBN INTEGER(13) NOT NULL,
    loanDate DATE,
    returnDate DATE,
    FOREIGN KEY (ISBN) REFERENCES Book(ISBN) ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY (memberId) REFERENCES Member(memberId) ON UPDATE CASCADE ON DELETE CASCADE,
    PRIMARY KEY(memberId,ISBN)
);


SHOW tables;